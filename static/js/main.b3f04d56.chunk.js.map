{"version":3,"sources":["Navigation.tsx","ProjectCard.tsx","images/preview_badrpg.jpg","images/preview_carriage.png","images/preview_exercise_gen.png","images/preview_ins_outs.png","images/preview_questodo.jpg","images/preview_rummikub.jpg","images/preview_sudoku.jpg","images/preview_tetris.jpg","images/preview_blogs.png","images/preview_letquiz.png","images/preview_scribe.jpg","images/preview_libe.png","images/preview_plume.png","images/preview_linked.png","images/preview_shef.png","projects.ts","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navigation","className","ProjectCard","name","date","description","image","altText","repoURL","otherLinks","Card","alt","src","width","style","maxHeight","objectFit","CardContent","CardActions","Button","href","color","Array","from","keys","map","key","get","currentProjects","libePreview","collegeProjects","plumePreview","Map","carriagePreview","blogsPreview","letquizPreview","hackathonProjects","scribePreview","questodoPreview","shefPreview","linkedPreview","personalProjects","exercisePreview","insAndOutsPreview","hsProjects","badrpgPreview","sudokuPreview","tetrisPreview","rummikubPreview","ProjectCardGrid","props","title","Grid","container","projects","project","item","xs","sm","md","Home","id","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3f04d56.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>helen.xu.yang</h1>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { Button, Card, CardActions, CardContent } from \"@material-ui/core\"\r\nimport './ProjectCard.css';\r\nimport { Project } from './types';\r\n\r\nconst ProjectCard = ({ name, date, description, image, altText, repoURL, otherLinks }: Project) => {\r\n  return <Card className=\"project-card\">\r\n      <img alt={altText} src={image} width='100%' style={{ maxHeight: '300px', objectFit: 'contain' }}></img>\r\n    <CardContent>\r\n      <h4>{name}</h4>\r\n      <i>{date}</i>\r\n      <p>{description}</p>\r\n    </CardContent>\r\n    <CardActions>\r\n      {repoURL && <Button href={repoURL} style={{ color: 'darkslateblue' }}>\r\n        GitHub\r\n      </Button>}\r\n      {otherLinks && Array.from(otherLinks?.keys()).map((key) =>\r\n        <Button href={otherLinks?.get(key)} style={{ color: 'darkslateblue' }} >\r\n          {key}\r\n        </Button>)}\r\n    </CardActions>\r\n  </Card>\r\n}\r\n\r\nexport default ProjectCard;\r\n","export default __webpack_public_path__ + \"static/media/preview_badrpg.953d4749.jpg\";","export default __webpack_public_path__ + \"static/media/preview_carriage.3a2af9f3.png\";","export default __webpack_public_path__ + \"static/media/preview_exercise_gen.3294f8e2.png\";","export default __webpack_public_path__ + \"static/media/preview_ins_outs.9d413d4f.png\";","export default __webpack_public_path__ + \"static/media/preview_questodo.bede874d.jpg\";","export default __webpack_public_path__ + \"static/media/preview_rummikub.45d07ce1.jpg\";","export default __webpack_public_path__ + \"static/media/preview_sudoku.4a69b7c5.jpg\";","export default __webpack_public_path__ + \"static/media/preview_tetris.19729f32.jpg\";","export default __webpack_public_path__ + \"static/media/preview_blogs.eff7590c.png\";","export default __webpack_public_path__ + \"static/media/preview_letquiz.99bb25e0.png\";","export default __webpack_public_path__ + \"static/media/preview_scribe.8e16d17b.jpg\";","export default __webpack_public_path__ + \"static/media/preview_libe.aefaee2f.png\";","export default __webpack_public_path__ + \"static/media/preview_plume.ba45a79d.png\";","export default __webpack_public_path__ + \"static/media/preview_linked.8482d5e2.png\";","export default __webpack_public_path__ + \"static/media/preview_shef.160ed0b0.png\";","import badrpgPreview from './images/preview_badrpg.jpg';\r\nimport carriagePreview from './images/preview_carriage.png';\r\nimport exercisePreview from './images/preview_exercise_gen.png';\r\nimport insAndOutsPreview from './images/preview_ins_outs.png';\r\nimport questodoPreview from './images/preview_questodo.jpg';\r\nimport rummikubPreview from './images/preview_rummikub.jpg';\r\nimport sudokuPreview from './images/preview_sudoku.jpg';\r\nimport tetrisPreview from './images/preview_tetris.jpg';\r\nimport websitePreview from './images/preview_website.png';\r\nimport blogsPreview from './images/preview_blogs.png';\r\nimport letquizPreview from './images/preview_letquiz.png';\r\nimport scribePreview from './images/preview_scribe.jpg';\r\nimport libePreview from './images/preview_libe.png';\r\nimport plumePreview from './images/preview_plume.png';\r\nimport linkedPreview from './images/preview_linked.png';\r\nimport shefPreview from './images/preview_shef.png';\r\n\r\nimport { Project } from './types';\r\n\r\nexport const currentProjects: Project[] = [\r\n    {\r\n      name: \"Libe\",\r\n      description: \"A website for Science Olympiad at Cornell tournament management and scoring that I'm developing with a partner. Very much a WIP but we're hoping to see it live by this fall!\",\r\n      date: \"June 2022 - Present\",\r\n      image: libePreview,\r\n      altText: \"\",\r\n    }\r\n  ];\r\n  \r\n  export const collegeProjects: Project[] = [\r\n    {\r\n        name: \"Plume\",\r\n        description: \"Game Design Initiative at Cornell 2022 Showcase Most Innovative Winner: A wholesome 2D platformer where you play as Cupid, shooting arrows to climb and stun enemies to reunite two lovers. I created a level editor using Java Swing, implemented Cupid's animations, and created UI screens including the main menu and level selection screen.\",\r\n        date: \"January 2022 - May 2022\",\r\n        image: plumePreview,\r\n        altText: \"\",\r\n        otherLinks: new Map([\r\n            ['Try it out!', 'https://gdiac.cs.cornell.edu/temp/showcase/gallery/plume/']\r\n        ])\r\n    },\r\n    {\r\n      name: \"Carriage\",\r\n      description: \"My project team while I was on the Cornell Design and Tech Initiative! Carrige is a set of Flutter and React mobile/web apps to support CULift, Cornell's paratransit service for students with disabilities. I primarily worked on the rider/driver apps, including testing for and ensuring screenreader accessibility using TalkBack.\",\r\n      date: \"Spring 2020 - August 2021\",\r\n      image: carriagePreview,\r\n      altText: \"A mobile phone showing a schedule of CULift rides from the Carriage driver app\",\r\n      repoURL: \"https://github.com/cornell-dti/carriage-driver/\",\r\n      otherLinks: new Map([\r\n        ['DTI Project', 'https://www.cornelldti.org/projects/carriage/']\r\n      ])\r\n    },\r\n    {\r\n      name: \"CUBlogs\",\r\n      description: \"Trends in Web Dev partner project: A multi-user blog where users can create, upvote, and filter text posts by author, keywords, and tags\",\r\n      date: \"December 2020\",\r\n      image: blogsPreview,\r\n      altText: \"The main page of CUBlogs with posts filtered to posts with the author 'Jeremy'\",\r\n      repoURL: \"https://github.com/triple-jay/trendsfinalproject\",\r\n      otherLinks: new Map([\r\n        ['Try it out!', 'https://cu-blogs.herokuapp.com/'],\r\n      ])\r\n    },\r\n    {\r\n      name: \"LetQuiz\",\r\n      description: \"Cornell AppDev Hack Challenge, Best App for the Remote Era: A flashcard app created with a partner from Intro to Backend Development, two iOS devs, and a UI/UX designer. I worked on designing and implementing the app's backend featuring authenticated requests and occasionally helped debug our iOS frontend.\",\r\n      date: \"December 2020\",\r\n      image: letquizPreview,\r\n      altText: \"Code from backend routes for getting and deleting a flashcard\",\r\n      repoURL: \"https://github.com/mly32/flashcard-app-hack-challenge\",\r\n    },\r\n  ];\r\n  \r\n  export const hackathonProjects: Project[] = [\r\n    {\r\n        name: \"Scribe\",\r\n        description: \"TechTogether Seattle submission: A web app that connects users with visual/hearing impairments to Microsoft Azure AI or sighted/hearing volunteers for describing or transcribing images, audio, and videos\",\r\n        date: \"January 2021\",\r\n        image: scribePreview,\r\n        altText: \"Main page showing posts and buttons to create a post, analyze an image with AI, or transcribe a video\",\r\n        repoURL: \"https://github.com/helenxuyang/tts_2021\"\r\n    },\r\n    {\r\n      name: \"quesTodo\",\r\n      description: \"Technica 2020, Best Product IoT Hack 2nd Place Winner: A React app that turns your to do list into boss battle quests.\",\r\n      date: \"October 2020\",\r\n      image: questodoPreview,\r\n      altText: \"\",\r\n      repoURL: \"https://github.com/helenxuyang/technica_2020\",\r\n      otherLinks: new Map([\r\n        ['DevPost', 'https://devpost.com/software/questodo'],\r\n      ])\r\n    },\r\n    {\r\n      name: \"shef\",\r\n      description: \"DTI Hackathon 2020, Peoples' Choice Winner: A Flutter app for helping college students find recipes based on the ingredients and utensils they have with a fun Tinder-style interface\",\r\n      date: \"September 2020\",\r\n      image: shefPreview,\r\n      altText: \"\",\r\n      repoURL: \"https://github.com/helenxuyang/dti_hackathon_2020\",\r\n    },\r\n    {\r\n      name: \"Linked\",\r\n      description: \"Hack Our Campus 2020, Mental Health Category Winner: A Flutter app for creating virtual hangouts with automatically generated Google Meet calls to help students stay connected more easily during the remote semester\",\r\n      date: \"August 2020\",\r\n      image: linkedPreview,\r\n      altText: \"\",\r\n      repoURL: \"https://github.com/helenxuyang/linked\",\r\n    },\r\n  ];\r\n  \r\n  export const personalProjects: Project[] = [\r\n    {\r\n      name: \"Exercise Generator\",\r\n      description: \"A Flutter app that generates a random workout from a list of exercises, made in hopes of forcing myself to exercise more (spoiler: it didn't work)\",\r\n      date: \"Summer 2020\",\r\n      image: exercisePreview,\r\n      altText: \"\",\r\n      repoURL: \"https://github.com/helenxuyang/exercise_generator\",\r\n    },\r\n    {\r\n      name: \"Ins & Outs\",\r\n      description: \"A Flutter app for tracking food and symptoms to help with identifying possible food intolerances. Unfinished, but I hope to continue working on it!\",\r\n      date: \"Summer 2020\",\r\n      image: insAndOutsPreview,\r\n      altText: \"\",\r\n      repoURL: \"https://github.com/helenxuyang/ins-and-outs\",\r\n    }\r\n  ]\r\n  \r\n  export const hsProjects: Project[] = [\r\n    {\r\n      name: \"BadRPG\",\r\n      description: \"AOOD partner project: an RPG full of puns with a self-aware name and my questionable pixel art\",\r\n      date: \"Spring 2019\",\r\n      image: badrpgPreview,\r\n      altText: \"A character standing in front of two houses\",\r\n      repoURL: \"https://github.com/helenxuyang/BadRPG/\",\r\n    },\r\n    {\r\n      name: \"Sudoku\",\r\n      description: \"AOOD group project: a Sudoku game made for our teacher, who was our client as I lead a team of 7 students to walk through the professional software development process\",\r\n      date: \"Winter-Spring 2019\",\r\n      image: sudokuPreview,\r\n      altText: \"Our Sudoku game interface\",\r\n      repoURL: \"https://github.com/helenxuyang/Sudoku\",\r\n    },\r\n    {\r\n      name: \"Tetris\",\r\n      description: \"CSA partner project: a Tetris game with single-player sprint/marathon and 2-player race/battle modes\",\r\n      date: \"Spring 2018\",\r\n      image: tetrisPreview,\r\n      altText: \"Two Tetris screens side by side\",\r\n      repoURL: \"https://github.com/helenxuyang/Tetris\",\r\n    },\r\n    {\r\n      name: \"Rummikub\",\r\n      description: \"CSA picture project: a recreation of the board game Rummikub, created from a base project with mouse click position and image display features\",\r\n      date: \"Fall-Winter 2018\",\r\n      image: rummikubPreview,\r\n      altText: \"A grid with number tiles\",\r\n      repoURL: \"https://github.com/helenxuyang/Rummikub\",\r\n    },\r\n  ];\r\n  ","import { Grid } from '@material-ui/core';\r\nimport './Home.css';\r\nimport './ProjectCard';\r\nimport ProjectCard from './ProjectCard';\r\nimport { Project } from './types';\r\nimport { currentProjects, collegeProjects, hackathonProjects, personalProjects, hsProjects } from './projects';\r\n\r\ntype ProjectCardGridProps = {\r\n  title: string,\r\n  projects: Project[]\r\n}\r\nconst ProjectCardGrid = (props: ProjectCardGridProps) => {\r\n  return <div>\r\n    <h3>{props.title}</h3>\r\n    <Grid container>\r\n      {props.projects.map((project) =>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <ProjectCard {...project} />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  </div>;\r\n}\r\n\r\nconst Home = () => {\r\n  return <div id=\"home\">\r\n    <div id=\"home-intro\" className=\"home-section\">\r\n      <p className=\"intro-title\">Hi, I'm Helen!</p>\r\n      <p>I'm a CS student at Cornell University ('23). I'm interested in creating useful, fun, and accessible tech!</p>\r\n    </div>\r\n    <div id=\"projects\" className=\"home-section\">\r\n      <h2 id=\"projects-header\">Projects</h2>\r\n      <ProjectCardGrid title=\"Current Projects\" projects={currentProjects} />\r\n      <ProjectCardGrid title=\"School Projects\" projects={collegeProjects} />\r\n      <ProjectCardGrid title=\"Hackathon Projects\" projects={hackathonProjects} />\r\n      <ProjectCardGrid title=\"Personal Projects\" projects={personalProjects} />\r\n      <ProjectCardGrid title=\"High School Projects\" projects={hsProjects} />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Navigation from './Navigation';\r\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport Home from './Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navigation />\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}