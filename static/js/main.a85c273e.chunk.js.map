{"version":3,"sources":["Navigation.tsx","ProjectCard.tsx","images/preview_badrpg.jpg","images/preview_carriage.png","images/preview_exercise_gen.png","images/preview_ins_outs.png","images/preview_questodo.jpg","images/preview_rummikub.jpg","images/preview_sudoku.jpg","images/preview_tetris.jpg","images/construction.png","Home.tsx","About.tsx","Resume.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navigation","className","to","ProjectCard","name","date","description","image","altText","repoURL","otherLinks","Card","CardActionArea","alt","src","width","style","maxHeight","objectFit","CardContent","CardActions","Button","href","color","Array","from","keys","map","key","get","currentProjects","carriagePreview","Map","tba","personalProjects","exercisePreview","insAndOutsPreview","hackathonProjects","questodoPreview","collegeProjects","hsProjects","badrpgPreview","sudokuPreview","tetrisPreview","rummikubPreview","ProjectCardGrid","props","title","Grid","container","projects","project","item","xs","sm","md","Home","id","About","Resume","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a85c273e.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n\r\n    <nav className=\"navbar\">\r\n      <h1>helen.xu.yang</h1>\r\n      <ul>\r\n        <li><Link to=\"/\">HOME</Link></li>\r\n        <li><Link to=\"/about\">ABOUT ME</Link></li>\r\n        <li><Link to=\"/resume\">RESUME</Link></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { Button, Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Link } from \"@material-ui/core\"\r\nimport './ProjectCard.css';\r\n\r\ntype Project = {\r\n  name: string,\r\n  date: string,\r\n  description: string,\r\n  image: string,\r\n  altText: string,\r\n  repoURL: string,\r\n  otherLinks?: Map<string, string>\r\n}\r\n\r\nconst ProjectCard = ({ name, date, description, image, altText, repoURL, otherLinks }: Project) => {\r\n  return <Card className=\"project-card\">\r\n    <CardActionArea>\r\n      <img alt={altText} src={image} width='100%' style={{ maxHeight: '300px', objectFit: 'contain' }}></img>\r\n    </CardActionArea>\r\n    <CardContent>\r\n      <h2>{name}</h2>\r\n      <i>{date}</i>\r\n      <p>{description}</p>\r\n    </CardContent>\r\n    <CardActions>\r\n      <Button href={repoURL} style={{ color: 'darkslateblue' }}>\r\n        GitHub\r\n      </Button>\r\n      {otherLinks && Array.from(otherLinks?.keys()).map((key) =>\r\n        <Button href={otherLinks?.get(key)} style={{ color: 'darkslateblue' }} >\r\n          {key}\r\n        </Button>)}\r\n\r\n    </CardActions>\r\n  </Card>\r\n}\r\n\r\nexport default ProjectCard;\r\nexport type { Project };","export default __webpack_public_path__ + \"static/media/preview_badrpg.953d4749.jpg\";","export default __webpack_public_path__ + \"static/media/preview_carriage.3a2af9f3.png\";","export default __webpack_public_path__ + \"static/media/preview_exercise_gen.3294f8e2.png\";","export default __webpack_public_path__ + \"static/media/preview_ins_outs.9d413d4f.png\";","export default __webpack_public_path__ + \"static/media/preview_questodo.bede874d.jpg\";","export default __webpack_public_path__ + \"static/media/preview_rummikub.45d07ce1.jpg\";","export default __webpack_public_path__ + \"static/media/preview_sudoku.4a69b7c5.jpg\";","export default __webpack_public_path__ + \"static/media/preview_tetris.19729f32.jpg\";","export default __webpack_public_path__ + \"static/media/construction.68c3b2df.png\";","import { Grid } from '@material-ui/core';\r\nimport './Home.css';\r\nimport './ProjectCard';\r\nimport ProjectCard from './ProjectCard';\r\nimport { Project } from './ProjectCard';\r\nimport badrpgPreview from './images/preview_badrpg.jpg';\r\nimport carriagePreview from './images/preview_carriage.png';\r\nimport exercisePreview from './images/preview_exercise_gen.png';\r\nimport insAndOutsPreview from './images/preview_ins_outs.png';\r\nimport questodoPreview from './images/preview_questodo.jpg';\r\nimport rummikubPreview from './images/preview_rummikub.jpg';\r\nimport sudokuPreview from './images/preview_sudoku.jpg';\r\nimport tetrisPreview from './images/preview_tetris.jpg';\r\nimport tba from './images/construction.png';\r\n\r\nconst currentProjects: Project[] = [\r\n  {\r\n    name: \"Carriage\",\r\n    description: \"My DTI subteam! Flutter and React mobile/web apps to support CULift, Cornell's paratransit service for students with disabilities. I primarily work on the rider/driver apps\",\r\n    date: \"Spring 2020 - Present\",\r\n    image: carriagePreview,\r\n    altText: \"\",\r\n    repoURL: \"https://github.com/cornell-dti/carriage-driver/\",\r\n    otherLinks: new Map([\r\n      ['DTI Project', 'https://www.cornelldti.org/projects/carriage/']\r\n    ])\r\n  },\r\n  {\r\n    name: \"helenxuyang.github.io\",\r\n    description: \"How's that for recursion? My first project for learning HTML/CSS/React on my long journey to learn about webdev :)\",\r\n    date: \"Summer 2020 - Present\",\r\n    image: tba,\r\n    altText: \"\",\r\n    repoURL: \"https://github.com/helenxuyang/helenxuyang.github.io\",\r\n  }\r\n];\r\n\r\nconst personalProjects: Project[] = [\r\n  {\r\n    name: \"Exercise Generator\",\r\n    description: \"A Flutter app that generates a random workout from a list of exercises, made in hopes of forcing myself to exercise more (spoiler: it didn't work)\",\r\n    date: \"Summer 2020\",\r\n    image: exercisePreview,\r\n    altText: \"\",\r\n    repoURL: \"https://github.com/helenxuyang/exercise_generator\",\r\n  },\r\n  {\r\n    name: \"Ins & Outs\",\r\n    description: \"A Flutter app for tracking food and symptoms to help with identifying possible food intolerances. Unfinished, but I hope to continue working on it!\",\r\n    date: \"Started Summer 2020\",\r\n    image: insAndOutsPreview,\r\n    altText: \"\",\r\n    repoURL: \"https://github.com/helenxuyang/ins-and-outs\",\r\n  }\r\n]\r\n\r\nconst hackathonProjects: Project[] = [\r\n  {\r\n    name: \"quesTodo\",\r\n    description: \"Technica 2020, Best Product IoT Hack 2nd Place Winner: A React app that turns your to do list into boss battle quests.\",\r\n    date: \"October 2020\",\r\n    image: questodoPreview,\r\n    altText: \"\",\r\n    repoURL: \"https://github.com/helenxuyang/technica_2020\",\r\n    otherLinks: new Map([\r\n      ['DevPost', 'https://devpost.com/software/questodo'],\r\n    ])\r\n  },\r\n  {\r\n    name: \"shef\",\r\n    description: \"DTI Hackathon 2020, Peoples' Choice Winner: A Flutter app for helping college students find recipes based on the ingredients and utensils they have with a fun Tinder-style interface\",\r\n    date: \"September 2020\",\r\n    image: tba,\r\n    altText: \"\",\r\n    repoURL: \"https://github.com/helenxuyang/ins-and-outs\",\r\n  },\r\n  {\r\n    name: \"Linked\",\r\n    description: \"Hack Our Campus 2020, Mental Health Category Winner: A Flutter app for creating virtual hangouts with automatically generated Google Meet calls to help students stay connected more easily during the remote semester\",\r\n    date: \"August 2020\",\r\n    image: tba,\r\n    altText: \"\",\r\n    repoURL: \"https://github.com/helenxuyang/ins-and-outs\",\r\n  },\r\n];\r\n\r\nconst collegeProjects: Project[] = [\r\n  {\r\n    name: \"CUBlogs\",\r\n    description: \"Trends in Web Dev partner project: A multi-user blog where users can create, upvote, and filter text posts by author, keywords, and tags\",\r\n    date: \"December 2020\",\r\n    image: tba,\r\n    altText: \"\",\r\n    repoURL: \"https://github.com/triple-jay/trendsfinalproject\",\r\n    otherLinks: new Map([\r\n      ['Try it out!', 'https://cu-blogs.herokuapp.com/'],\r\n    ])\r\n  },\r\n  {\r\n    name: \"LetQuiz\",\r\n    description: \"Cornell AppDev Hack Challenge, Best App for the Remote Era: A flashcard app created with a partner from Intro to Backend Development, two iOS devs, and a UI/UX designer. I worked on designing and implementing the app's backend featuring authenticated requests and occasionally helped debug our iOS frontend.\",\r\n    date: \"December 2020\",\r\n    image: tba,\r\n    altText: \"\",\r\n    repoURL: \"https://github.com/mly32/flashcard-app-hack-challenge\",\r\n  },\r\n];\r\n\r\nconst hsProjects: Project[] = [\r\n  {\r\n    name: \"BadRPG\",\r\n    description: \"AOOD partner project: an RPG full of puns with a self-aware name and my questionable pixel art\",\r\n    date: \"Spring 2019\",\r\n    image: badrpgPreview,\r\n    altText: \"A character standing in front of two houses\",\r\n    repoURL: \"https://github.com/helenxuyang/BadRPG/\",\r\n  },\r\n  {\r\n    name: \"Sudoku\",\r\n    description: \"AOOD group project: a Sudoku game made for our teacher, who was our client as I lead a team of 7 students to walk through the professional software development process\",\r\n    date: \"Winter-Spring 2019\",\r\n    image: sudokuPreview,\r\n    altText: \"Our Sudoku game interface\",\r\n    repoURL: \"https://github.com/helenxuyang/Sudoku\",\r\n  },\r\n  {\r\n    name: \"Tetris\",\r\n    description: \"CSA partner project: a Tetris game with single-player sprint/marathon and 2-player race/battle modes\",\r\n    date: \"Spring 2018\",\r\n    image: tetrisPreview,\r\n    altText: \"Two Tetris screens side by side\",\r\n    repoURL: \"https://github.com/helenxuyang/Tetris\",\r\n  },\r\n  {\r\n    name: \"Rummikub\",\r\n    description: \"CSA picture project: a recreation of the board game Rummikub, created from a base project with mouse click position and image display features\",\r\n    date: \"Fall-Winter 2018\",\r\n    image: rummikubPreview,\r\n    altText: \"A grid with number tiles\",\r\n    repoURL: \"https://github.com/helenxuyang/Rummikub\",\r\n  },\r\n];\r\n\r\ntype ProjectCardGridProps = {\r\n  title: string,\r\n  projects: Project[]\r\n}\r\nconst ProjectCardGrid = (props: ProjectCardGridProps) => {\r\n  return <div>\r\n    <h2>{props.title}</h2>\r\n    <Grid container>\r\n      {props.projects.map((project) =>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <ProjectCard {...project} />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  </div>;\r\n}\r\n\r\nconst Home = () => {\r\n  return <div id=\"home\">\r\n    <div id=\"home-intro\" className=\"home-section\">\r\n      <h1>Hi, I'm Helen!</h1>\r\n      <p>I'm a CS student at Cornell University ('23). I'm hoping to learn more about creating impactful and accessible tech!</p>\r\n    </div>\r\n    <div id=\"projects\" className=\"home-section\">\r\n      <h1>Projects</h1>\r\n      <ProjectCardGrid title=\"Current Projects\" projects={currentProjects} />\r\n      <ProjectCardGrid title=\"Hackathon Projects\" projects={hackathonProjects} />\r\n      <ProjectCardGrid title=\"Personal Projects\" projects={personalProjects} />\r\n      <ProjectCardGrid title=\"School Projects\" projects={collegeProjects} />\r\n      <ProjectCardGrid title=\"High School Projects\" projects={hsProjects} />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Home;","import tba from './images/construction.png';\r\n\r\nconst About = () => {\r\n  return <div>\r\n    <img src={tba} alt=\"To be added\" />\r\n  </div>\r\n}\r\n\r\nexport default About;","import tba from './images/construction.png';\r\n\r\n\r\nconst Resume = () => {\r\n  return <div>\r\n    <img src={tba} alt=\"To be added\" />\r\n  </div>\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Navigation from './Navigation';\r\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Resume from './Resume';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navigation />\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/resume\">\r\n            <Resume />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}